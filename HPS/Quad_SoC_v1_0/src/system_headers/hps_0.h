#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file '/cygdrive/c/PROJECTS/GHRD_quad_v4_0/GHRD/soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'pwm_1', class 'pwm'
 * The macros are prefixed with 'PWM_1_'.
 * The prefix is the slave descriptor.
 */
#define PWM_1_COMPONENT_TYPE pwm
#define PWM_1_COMPONENT_NAME pwm_1
#define PWM_1_BASE 0x0
#define PWM_1_SPAN 256
#define PWM_1_END 0xff

/*
 * Macros for device 'pwm_0', class 'pwm'
 * The macros are prefixed with 'PWM_0_'.
 * The prefix is the slave descriptor.
 */
#define PWM_0_COMPONENT_TYPE pwm
#define PWM_0_COMPONENT_NAME pwm_0
#define PWM_0_BASE 0x100
#define PWM_0_SPAN 256
#define PWM_0_END 0x1ff

/*
 * Macros for device 'uart_0', class 'altera_avalon_uart'
 * The macros are prefixed with 'UART_0_'.
 * The prefix is the slave descriptor.
 */
#define UART_0_COMPONENT_TYPE altera_avalon_uart
#define UART_0_COMPONENT_NAME uart_0
#define UART_0_BASE 0x1400
#define UART_0_SPAN 32
#define UART_0_END 0x141f
#define UART_0_BAUD 115200
#define UART_0_DATA_BITS 8
#define UART_0_FIXED_BAUD 0
#define UART_0_FREQ 100000000
#define UART_0_PARITY 'N'
#define UART_0_SIM_CHAR_STREAM ""
#define UART_0_SIM_TRUE_BAUD 0
#define UART_0_STOP_BITS 1
#define UART_0_SYNC_REG_DEPTH 2
#define UART_0_USE_CTS_RTS 0
#define UART_0_USE_EOP_REGISTER 0

/*
 * Macros for device 'hps_0_led', class 'altera_avalon_pio'
 * The macros are prefixed with 'HPS_0_LED_'.
 * The prefix is the slave descriptor.
 */
#define HPS_0_LED_COMPONENT_TYPE altera_avalon_pio
#define HPS_0_LED_COMPONENT_NAME hps_0_led
#define HPS_0_LED_BASE 0x10040
#define HPS_0_LED_SPAN 16
#define HPS_0_LED_END 0x1004f
#define HPS_0_LED_BIT_CLEARING_EDGE_REGISTER 0
#define HPS_0_LED_BIT_MODIFYING_OUTPUT_REGISTER 0
#define HPS_0_LED_CAPTURE 0
#define HPS_0_LED_DATA_WIDTH 1
#define HPS_0_LED_DO_TEST_BENCH_WIRING 0
#define HPS_0_LED_DRIVEN_SIM_VALUE 0
#define HPS_0_LED_EDGE_TYPE NONE
#define HPS_0_LED_FREQ 100000000
#define HPS_0_LED_HAS_IN 0
#define HPS_0_LED_HAS_OUT 1
#define HPS_0_LED_HAS_TRI 0
#define HPS_0_LED_IRQ_TYPE NONE
#define HPS_0_LED_RESET_VALUE 1

/*
 * Macros for device 'aux_radio_0_mem', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'AUX_RADIO_0_MEM_'.
 * The prefix is the slave descriptor.
 */
#define AUX_RADIO_0_MEM_COMPONENT_TYPE altera_avalon_onchip_memory2
#define AUX_RADIO_0_MEM_COMPONENT_NAME aux_radio_0_mem
#define AUX_RADIO_0_MEM_BASE 0x11000
#define AUX_RADIO_0_MEM_SPAN 1024
#define AUX_RADIO_0_MEM_END 0x113ff
#define AUX_RADIO_0_MEM_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define AUX_RADIO_0_MEM_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define AUX_RADIO_0_MEM_CONTENTS_INFO ""
#define AUX_RADIO_0_MEM_DUAL_PORT 1
#define AUX_RADIO_0_MEM_GUI_RAM_BLOCK_TYPE M10K
#define AUX_RADIO_0_MEM_INIT_CONTENTS_FILE init_aux_radio_0_mem
#define AUX_RADIO_0_MEM_INIT_MEM_CONTENT 1
#define AUX_RADIO_0_MEM_INSTANCE_ID NONE
#define AUX_RADIO_0_MEM_NON_DEFAULT_INIT_FILE_ENABLED 1
#define AUX_RADIO_0_MEM_RAM_BLOCK_TYPE M10K
#define AUX_RADIO_0_MEM_READ_DURING_WRITE_MODE OLD_DATA
#define AUX_RADIO_0_MEM_SINGLE_CLOCK_OP 0
#define AUX_RADIO_0_MEM_SIZE_MULTIPLE 1
#define AUX_RADIO_0_MEM_SIZE_VALUE 1024
#define AUX_RADIO_0_MEM_WRITABLE 1
#define AUX_RADIO_0_MEM_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define AUX_RADIO_0_MEM_MEMORY_INFO_GENERATE_DAT_SYM 1
#define AUX_RADIO_0_MEM_MEMORY_INFO_GENERATE_HEX 1
#define AUX_RADIO_0_MEM_MEMORY_INFO_HAS_BYTE_LANE 0
#define AUX_RADIO_0_MEM_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define AUX_RADIO_0_MEM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define AUX_RADIO_0_MEM_MEMORY_INFO_MEM_INIT_FILENAME init_aux_radio_0_mem

/*
 * Macros for device 'aux_imu_0_mem', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'AUX_IMU_0_MEM_'.
 * The prefix is the slave descriptor.
 */
#define AUX_IMU_0_MEM_COMPONENT_TYPE altera_avalon_onchip_memory2
#define AUX_IMU_0_MEM_COMPONENT_NAME aux_imu_0_mem
#define AUX_IMU_0_MEM_BASE 0x41000
#define AUX_IMU_0_MEM_SPAN 1024
#define AUX_IMU_0_MEM_END 0x413ff
#define AUX_IMU_0_MEM_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define AUX_IMU_0_MEM_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define AUX_IMU_0_MEM_CONTENTS_INFO ""
#define AUX_IMU_0_MEM_DUAL_PORT 1
#define AUX_IMU_0_MEM_GUI_RAM_BLOCK_TYPE M10K
#define AUX_IMU_0_MEM_INIT_CONTENTS_FILE init_aux_imu_0_mem
#define AUX_IMU_0_MEM_INIT_MEM_CONTENT 1
#define AUX_IMU_0_MEM_INSTANCE_ID NONE
#define AUX_IMU_0_MEM_NON_DEFAULT_INIT_FILE_ENABLED 1
#define AUX_IMU_0_MEM_RAM_BLOCK_TYPE M10K
#define AUX_IMU_0_MEM_READ_DURING_WRITE_MODE OLD_DATA
#define AUX_IMU_0_MEM_SINGLE_CLOCK_OP 0
#define AUX_IMU_0_MEM_SIZE_MULTIPLE 1
#define AUX_IMU_0_MEM_SIZE_VALUE 1024
#define AUX_IMU_0_MEM_WRITABLE 1
#define AUX_IMU_0_MEM_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define AUX_IMU_0_MEM_MEMORY_INFO_GENERATE_DAT_SYM 1
#define AUX_IMU_0_MEM_MEMORY_INFO_GENERATE_HEX 1
#define AUX_IMU_0_MEM_MEMORY_INFO_HAS_BYTE_LANE 0
#define AUX_IMU_0_MEM_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define AUX_IMU_0_MEM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 32
#define AUX_IMU_0_MEM_MEMORY_INFO_MEM_INIT_FILENAME init_aux_imu_0_mem

/*
 * Macros for device 'i2c_0', class 'i2c'
 * The macros are prefixed with 'I2C_0_'.
 * The prefix is the slave descriptor.
 */
#define I2C_0_COMPONENT_TYPE i2c
#define I2C_0_COMPONENT_NAME i2c_0
#define I2C_0_BASE 0x41400
#define I2C_0_SPAN 32
#define I2C_0_END 0x4141f

/*
 * Macros for device 'reset_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'RESET_0_'.
 * The prefix is the slave descriptor.
 */
#define RESET_0_COMPONENT_TYPE altera_avalon_pio
#define RESET_0_COMPONENT_NAME reset_0
#define RESET_0_BASE 0x41430
#define RESET_0_SPAN 16
#define RESET_0_END 0x4143f
#define RESET_0_BIT_CLEARING_EDGE_REGISTER 0
#define RESET_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define RESET_0_CAPTURE 0
#define RESET_0_DATA_WIDTH 4
#define RESET_0_DO_TEST_BENCH_WIRING 0
#define RESET_0_DRIVEN_SIM_VALUE 0
#define RESET_0_EDGE_TYPE NONE
#define RESET_0_FREQ 100000000
#define RESET_0_HAS_IN 0
#define RESET_0_HAS_OUT 1
#define RESET_0_HAS_TRI 0
#define RESET_0_IRQ_TYPE NONE
#define RESET_0_RESET_VALUE 15

/*
 * Macros for device 'select_0', class 'altera_avalon_pio'
 * The macros are prefixed with 'SELECT_0_'.
 * The prefix is the slave descriptor.
 */
#define SELECT_0_COMPONENT_TYPE altera_avalon_pio
#define SELECT_0_COMPONENT_NAME select_0
#define SELECT_0_BASE 0x41440
#define SELECT_0_SPAN 16
#define SELECT_0_END 0x4144f
#define SELECT_0_BIT_CLEARING_EDGE_REGISTER 0
#define SELECT_0_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SELECT_0_CAPTURE 0
#define SELECT_0_DATA_WIDTH 4
#define SELECT_0_DO_TEST_BENCH_WIRING 0
#define SELECT_0_DRIVEN_SIM_VALUE 0
#define SELECT_0_EDGE_TYPE NONE
#define SELECT_0_FREQ 100000000
#define SELECT_0_HAS_IN 0
#define SELECT_0_HAS_OUT 1
#define SELECT_0_HAS_TRI 0
#define SELECT_0_IRQ_TYPE NONE
#define SELECT_0_RESET_VALUE 0


#endif /* _ALTERA_HPS_0_H_ */
